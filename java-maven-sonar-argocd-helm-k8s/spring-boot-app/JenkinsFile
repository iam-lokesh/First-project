pipeline {
  agent any

  stages {

    stage('Checkout') {
      steps {
        checkout([$class: 'GitSCM', 
                  branches: [[name: '*/main']],
                  userRemoteConfigs: [[url: 'https://github.com/iam-lokesh/First-project.git']]])
      }
    }

    stage('Build and Test') {
      agent {
        docker {
          image 'lokeshvijay/maven-docker-agent:latest'
          args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
      }
      steps {
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }

    stage('Static Code Analysis') {
      agent {
        docker {
          image 'lokeshvijay/maven-docker-agent:latest'
          args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
      }
      environment {
        SONAR_URL = "http://43.205.137.118:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}
          '''
        }
      }
    }

    stage('Build and Push Docker Image') {
      agent {
        docker {
          image 'lokeshvijay/maven-docker-agent:latest'
          args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
      }
      environment {
        DOCKER_IMAGE = "lokeshvijay/ultimate-cicd:${BUILD_NUMBER}"
      }
      steps {
        withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            docker build -t ${DOCKER_IMAGE} .
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push ${DOCKER_IMAGE}
          '''
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "lokeshvijay102@gmail.com"
            git config user.name "Lokesh Vijay"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
            git push https://${GITHUB_TOKEN}@github.com/iam-lokesh/First-project HEAD:main
          '''
        }
      }
    }
  }
}
